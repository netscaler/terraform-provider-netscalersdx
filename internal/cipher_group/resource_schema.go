// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package cipher_group

import (
	"context"

	"terraform-provider-netscalersdx/internal/utils"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-log/tflog"
)

func cipherGroupResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Description: "Configuration for Cipher Group resource",
		Attributes: map[string]schema.Attribute{
			"cipher_group_description": schema.StringAttribute{
				Required:            true,
				Description:         "Describing the Cipher Group algorithms created. Minimum length =  1 Maximum length =  256",
				MarkdownDescription: "Describing the Cipher Group algorithms created. Minimum length =  1 Maximum length =  256",
			},
			"cipher_group_name": schema.StringAttribute{
				Required:            true,
				Description:         "Name of Cipher Group. Minimum length =  1 Maximum length =  128",
				MarkdownDescription: "Name of Cipher Group. Minimum length =  1 Maximum length =  128",
			},
			"cipher_name_list_array": schema.SetAttribute{
				ElementType:         types.StringType,
				Required:            true,
				Description:         "list of cipher suites in form of array of strings.",
				MarkdownDescription: "list of cipher suites in form of array of strings.",
			},
			"id": schema.StringAttribute{
				Computed: true,
				Optional: true,
			},
		},
	}
}

type cipherGroupModel struct {
	CipherGroupDescription types.String `tfsdk:"cipher_group_description"`
	CipherGroupName        types.String `tfsdk:"cipher_group_name"`
	CipherNameListArray    types.Set    `tfsdk:"cipher_name_list_array"`
	Id                     types.String `tfsdk:"id"`
}

func cipherGroupGetThePayloadFromtheConfig(ctx context.Context, data *cipherGroupModel) cipherGroupReq {
	tflog.Debug(ctx, "In cipherGroupGetThePayloadFromtheConfig Function")
	cipherGroupReqPayload := cipherGroupReq{
		CipherGroupDescription: data.CipherGroupDescription.ValueString(),
		CipherGroupName:        data.CipherGroupName.ValueString(),
		CipherNameListArray:    utils.TypeListToUnmarshalStringSet(data.CipherNameListArray),
	}
	return cipherGroupReqPayload
}

type cipherGroupReq struct {
	CipherGroupDescription string   `json:"cipher_group_description,omitempty"`
	CipherGroupName        string   `json:"cipher_group_name,omitempty"`
	CipherNameListArray    []string `json:"cipher_name_list_array,omitempty"`
}
